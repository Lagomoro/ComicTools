// ================================================================================
// * Module dependencies
// --------------------------------------------------------------------------------
import ExcelJS from 'exceljs';
import * as XLSX from 'xlsx';
import { ParsingOptions, WorkBook } from 'xlsx';
// ================================================================================

// ================================================================================
//# region ExcelUtil
// --------------------------------------------------------------------------------

export class ExcelUtil {
  // ------------------------------------------------------------------------------
  // * Function
  // ------------------------------------------------------------------------------
  //# region DataTransition
  // ------------------------------------------------------------------------------
  public static arrayBufferToXLSXWorkBook(buffer: ArrayBuffer, opts?: ParsingOptions): WorkBook {
    return XLSX.read(buffer, { ...opts, type: 'binary' });
  };
  // ------------------------------------------------------------------------------
  public static async arrayBufferToExcelJSWorkbook(buffer: ArrayBuffer): Promise<ExcelJS.Workbook> {
    const workbook = new ExcelJS.Workbook();
    await workbook.xlsx.load(buffer);
    return workbook;
  };

  public static async excelJSWorkbookToBlob(workbook: ExcelJS.Workbook): Promise<Blob> {
    return new Blob([await workbook.xlsx.writeBuffer()]);
  };
  // ------------------------------------------------------------------------------
  //# endregion
  // ------------------------------------------------------------------------------
}
// --------------------------------------------------------------------------------
//# endregion
// ================================================================================

// ================================================================================
// * Module exports
// --------------------------------------------------------------------------------
export default ExcelUtil;
// ================================================================================
